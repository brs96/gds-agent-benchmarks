question,expected_tools,expected_parameters,expected_answer
I want to run personalised article rank with damping factor 0.8 on Paddington and I want to know the scores for Paddington & Chorleywood.Give answer in the format station:answer. Separate the stations' result with a comma.
["mcp__gds-agent__article_rank"]
{"article_rank": {"dampingFactor": 0.8, "sourceNodes": "Paddington", "nodeIdentifierProperty": "name", "nodes": ["Paddington", "Chorleywood"]}}
Paddington: 0.2, Chorleywood: 0.0
I want to know the number of articulation points. Reply strictly with 'points:answer'
["mcp__gds-agent__articulation_points"]
{"articulation_points":{}}
points:142
I want to run Degree Centrality with reverse orientation and get the centrality of Farringdon station. Give the answer in the form Farringdon:x.
["mcp__gds-agent__get_node_properties_keys", "mcp__gds-agent__degree_centrality"]
{"degree_centrality": {"nodeIdentifierProperty": "name", "orientation": "REVERSE"}}
Farringdon: 3
I want to run harmonic centrality and get the centrality scores for stations Westminster and Waterloo. Answer should be given as  Station: score.Separate the stations' result with a comma.
["mcp__gds-agent__get_node_properties_keys", "mcp__gds-agent__harmonic_centrality"]
{"harmonic_centrality": {"nodeIdentifierProperty": "name", "nodes": ["Westminster", "Waterloo"]}}
Westminster: 0.028239, Waterloo: 0.023809
I want to run closeness centrality with the Wasserman-Faust formula and get scores for stations Westminster and Waterloo. Answer format should be as Station: score.Separate the stations' result with a comma.
["mcp__gds-agent__get_node_properties_keys", "mcp__gds-agent__closeness_centrality"]
{"closeness_centrality": {"nodeIdentifierProperty": "name", "useWassermanFaust": "True", "nodes": ["Westminster", "Waterloo"]}}
Westminster: 0.022651, Waterloo: 0.019542
I want to run betweenness centrality and get the centrality scores for Westminster and Waterloo.  Answer should be given as Station: score.Separate the stations' result with a comma.
["mcp__gds-agent__get_node_properties_keys", "mcp__gds-agent__betweenness_centrality"]
{"betweenness_centrality": {"nodeIdentifierProperty": "name", "nodes": ["Westminster", "Waterloo"]}}
Westminster: 0.0, Waterloo: 8.0
I want to count how many stations are part of a triangle. Give final answer in the format nodes: x.
["mcp__gds-agent__get_node_properties_keys", "mcp__gds-agent__triangle_count"]
{"triangle_count": {"nodeIdentifierProperty": "name"}}
nodes: 29
I want to run pagerank with Paddington station  as source node and get score for Royal Oak. Answer format should be Royal Oak:answer and nothing else.
["mcp__gds-agent__pagerank"]
{"pagerank": {"nodeIdentifierProperty": "name",  "sourceNodes": "Paddington", "nodes": ["Royal Oak"]}}
Royal Oak: 0.06375
I want to run bridges to find out the number of relationships that disconnect the graph. Give the answer as relationships:x. Do not emit anything else.
["mcp__gds-agent__bridges"]
{"bridges": {}}
relationships:136
I want to run eigenvector and get score for Canada water. Answer format should be Canada Water:answer and nothing else.
["mcp__gds-agent__get_node_properties_keys", "mcp__gds-agent__eigenvector_centrality"]
{"eigenvector_centrality": {"nodeIdentifierProperty": "name", "nodes": ["Canada Water"]}}
Canada Water: 1.401512
I want to know to run the weakly connected components algorithm and get the component of Bond Street. Reply only with Bond Street:answer and nothing else.
["mcp__gds-agent__weakly_connected_components"]
{"weakly_connected_components":{"nodeIdentifierProperty": "name", "nodes": ["Bond Street"]}}
Bond Street:0
I want to know how many strongly connected components exist in my graph. Reply only with scc:answer and nothing else.
["mcp__gds-agent__strongly_connected_components"]
{"strongly_connected_components":{}}
scc:301
I want to run k-core decomposition and get the core value for the Stockwell station. Reply strictly with Stockwell:answer and do not output anything else.
["mcp__gds-agent__k_core_decomposition"]
{"k_core_decomposition":{"nodeIdentifierProperty": "name", "nodes": ["Stockwell"]}}
Stockwell:2
I want to know the community modularity scores using community property rail. Reply only with community:score and nothing else. If the community is a number, write it as text e.g., 0 --> zero.
["mcp__gds-agent__modularity_metric"]
{"modularity_metric": { "communityProperty": "rail"}}
zero: -0.06268654905481816, one: 0.023520347496906017
I want to know the community conductance scores using community property rail. Reply only with community:score and nothing else. If the community is a number, write it as text e.g., 0 --> zero.
["mcp__gds-agent__conductance"]
{"conductance": { "communityProperty": "rail"}}
zero:0.20797720797720798, one: 0.6909090909090909
I want to run louvain for one iteration (and one level) using seed property rail and get the community of Paddington. Reply only with Paddington:answer and nothing else.
["mcp__gds-agent__louvain"]
{"louvain": { "maxIterations": 1, "maxLevels": 1, "seedProperty": "rail"}}
Paddington: 0
I want to run leiden for one iteration using seed property rail and get the community of Paddington. Reply only with Paddington:answer and nothing else.
["mcp__gds-agent__leiden"]
{"leiden": { "maxIterations": 1, "seedProperty": "rail"}}
Paddington: 1
I want to run modularity optimization for one iteration using seed property rail and get the community of Redbridge. Reply only with Redbridge:answer and nothing else.
[ "mcp__gds-agent__modularity_optimization"]
{"modularity_optimization": { "maxIterations": 1, "seedProperty": "rail"}}
Redbridge: 0
I want to run (k-1) coloring algorithm and find out how many colours do I need to color my graph. Run 20 iterations. Reply strictly with colours:answer"
[ "mcp__gds-agent__k_1_coloring"]
{"k_1_coloring" : { "maxIterations": 20}}
colours: 4
I want to run label propagation for one iteration using seed property rail and get the community of Kennington. Reply only with Kennington:answer and nothing else.
["mcp__gds-agent__label_propagation"]
{"label_propagation": { "maxIterations": 1, "seedProperty": "rail"}}
Kennington: 0
I want to run SLLPA for one iteration and get the community of Kennington. Reply only with Kennington:answer and nothing else. If the answer contains "[" or "]" remove them.
["mcp__gds-agent__speaker_listener_label_propagation"]
{"speaker_listener_label_propagation": { "maxIterations": 1}}
Kennington: 161
I want to run node similarity and find the 35th most similar station pair. Return each pair in the following format "station1 station2: similarity". Sort the two stations lexicographically by their name. Do not return anything else.
["mcp__gds-agent__node_similarity", "mcp__gds-agent__get_node_properties_keys"]
{"node_similarity" : {"topN": 35, "nodeIdentifierProperty": "name"} }
Aldgate Aldgate East: 0.666667
I want to run filtered node similarity and find the two most similar stations to Sloane Square from available stations Knightsbridge, Acton Town, Green Park, and Pimlico. Return results as station: similarity. Separate answers with a common. Do not write anything else.
["mcp__gds-agent__filtered_node_similarity", "mcp__gds-agent__get_node_properties_keys"]
{"filtered_node_similarity" : {"topK": 2, "nodeIdentifierProperty": "name", "sourceNodeFilter": ["Sloane Square"], "targetNodeFilter": ["Knightsbridge","Acton Town", "Green Park", "Pimlico"]} }
Knightsbridge: 0.5, Pimlico: 0.333333